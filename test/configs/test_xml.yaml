domain:
  name: "BLOCKS"
  requirements: ["equality", "strips", "typing"]
  types:
#    - { type_names: ["block"] }
    - { type_names: ["block"], parent_type: "object" }
  predicates:
    - name: "on"
      params:
        - { name: "x", type: "block" }
        - { name: "y", type: "block" }
    - name: "ontable"
      params:
        - { name: "x", type: "block" }
    - name: "clear"
      params:
        - { name: "x", type: "block" }
    - name: "handempty"
    - name: "holding"
      params:
        - { name: "x", type: "block" }
  actions:
    - name: "pick-up"
      params:
        - { name: "x", type: "block" }
      precondition:
        and:
            - or:
                - not:
                    and:
                        - not:
                            not:
                                not:
                                    expr: { name: "clear", args: ["x", "y", "z"] }
                        - expr: { name: "clear", args: ["x"] }
                        - not:
                            expr: {name: "test", args: ["a", "b"] }
                - or:
                    - not:
                        not:
                            expr: { name: "clear", args: ["x", "y", "z"] }
                    - expr: { name: "clear", args: ["x"] }
                    - not:
                        expr: {name: "test", args: ["a", "b"] }
                - expr: { name: "ontable", args: ["x"] }
                - exists:
                    what: { name: "x", type: "block" }
                    condition:
                        expr: { name: "clear", args: ["x"] }
                - forall:
                    what: { name: "x", type: "block" }
                    condition:
                        expr: { name: "clear", args: ["x"] }
            - expr: { name: "handempty" }
            - imply:
                condition:
                   expr: { name: "clear", args: ["x"] }
                consequence:
                    expr: { name: "clear", args: ["x"] }
            - compare:
                operator: "<="
                lhs:
                    num_op:
                        operator: "+"
                        lhs:
                            num_fnc: {name: "battery_level", args: ["x"]}
                        rhs:
                            num_term: 10
                rhs:
                    num_term: 5
            - equals:
                lhs: "a"
                rhs: "b"
      effect:
        and:
            - when:
                condition:
                    and:
                        - expr: {name: "ontable", args: ["x"]}
                        - expr: {name: "ontable", args: ["x"]}
                consequence:
                        expr: {name: "ontable", args: ["x"]}
            - not:
                expr: {name: "ontable", args: ["x"]}
            - not:
                expr: {name: "clear", args: ["x"]}
            - not:
                expr: {name: "handempty"}
            - expr: {name: "holding", args: ["x"] }
            - modify:
                operation: "decrease"
                lhs:
                    num_fnc: {name: "battery_level", args: ["x"]}
                rhs:
                    num_term: 10.4
