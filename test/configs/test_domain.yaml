domain:
  name: "construction"
  extends: "building"
  requirements: ["strips", "typing"]
  types:
    - { type_names: ["site", "material"] }
    - { type_names: ["bricks", "cables", "windows"], parent_type: "material" }
  constants:
    - { name: "mainsite", type: "site" }
  predicates:
    - name: "walls-built"
      params:
        - { name: "s", type: "site" }
    - name: "windows-fitted"
      params:
        - { name: "s", type: "site" }
    - name: "foundations-set"
      params:
        - { name: "s", type: "site" }
    - name: "cables-installed"
      params:
        - { name: "s", type: "site" }
    - name: "site-built"
      params:
        - { name: "s", type: "site" }
    - name: "on-site"
      params:
        - { name: "m", type: "material" }
        - { name: "s", type: "site" }
    - name: "material-used"
      params:
        - { name: "m", type: "material" }
  timeless:
    - expr: { name: "foundations-set", args: ["mainsite"] }
  actions:
    - name: "build-wall"
      params:
        - { name: "s", type: "site" }
        - { name: "b", type: "bricks" }
      precondition:
        and:
          - expr: { name: "on-site", args: ["b", "s"] }
          - expr: { name: "foundations-set", args: ["s"] }
          - not:
              expr: { name: "walls-built", args: ["s"] }
          - not:
              expr: { name: "material-used", args: ["b"] }
      effect:
        and:
          - expr: { name: "walls-built", args: ["s"] }
          - expr: { name: "material-used", args: ["b"] }
  axioms:
    - vars:
        - { name: "s", type: "site" }
      context:
        and:
          - expr: { name: "walls-built", args: ["s"] }
          - expr: { name: "windows-fitted", args: ["s"] }
          - expr: { name: "cables-installed", args: ["s"] }
      implies:
        expr: { name: "site-built", args: ["s"] }
