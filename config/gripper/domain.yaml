domain:
  name: "gripper-typed"
  requirements:
    equality: False
    strips: False
    typing: True
  types:
    - { type_names: ["room, ball, gripper"] }
  constants:
    - { type_names: ["left, right"], parent_type:"gripper" }
  predicates:
    - name: "at-robby"
      params:
        - { name: "r", type: "room" }
    - name: "at"
      params:
        - { name: "b", type: "ball" }
        - { name: "r", type: "room" }
    - name: "free"
      params:
        - { name: "g", type: "gripper" }
    - name: "carry"
      params:
        - { name: "o", type: "ball" }
        - { name: "g", type: "gripper" }
  actions:
    - name: "move"
      params:
        - { name: "from", type: "room" }
        - { name: "to", type: "room" }
      preconditions:
        - { name: "at-robby", args: ["from"] }
      effects:
        - { name: "at-robby", args: ["to"] }
        - { name: "at-robby", args: ["from"], not: true }
    - name: "pick"
      params:
        - { name: "obj", type: "ball" }
        - { name: "room", type: "room" }
        - { name: "gripper", type: "gripper" }
      preconditions:
        - { name: "at", args: ["obj", "room"] }
        - { name: "at-robby", args: ["room"] }
        - { name: "free", args: ["gripper"]}
      effects:
        - { name: "carry", args: ["obj", "gripper"] }
        - { name: "at", args: ["obj", "room"], not: true }
        - { name: "free", args: ["gripper"], not: true }
    - name: "drop"
      params:
        - { name: "obj", type: "ball" }
        - { name: "room", type: "room" }
        - { name: "gripper", type: "gripper" }
      preconditions:
        - { name: "carry", args: ["obj", "gripper"] }
        - { name: "at-robby", args: ["room"] }
      effects:
        - { name: "at", args: ["obj", "room"] }
        - { name: "free", args: ["gripper"] }
        - { name: "carry", args: ["obj", "gripper"], not: true }
